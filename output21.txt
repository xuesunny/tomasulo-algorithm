cycle_1
entry1 : yes,LD F2 0(R2),Issue,F2,;
entry2 : No ,,,,;
entry3 : No ,,,,;
entry4 : No ,,,,;
entry5 : No ,,,,;
entry6 : No ,,,,;
entry7 : No ,,,,;
entry8 : No ,,,,;
Load1 : yes,LD,,,,,#1,0;
Load2 : No,,,,,,,;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : No,,,,,,,;
Mult2 : No,,,,,,,;
Reorder:f0:;f1:;f2: 1;f3:;f4:;f5:;f6:;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2: Yes;f3:No;f4:No;f5:No;f6:No;f7:No;f8:No;f9:No;f10:No;
cycle_2
entry1 : yes,LD F2 0(R2),Execute,F2,;
entry2 : yes,LD F4 0(R3),Issue,F4,;
entry3 : No ,,,,;
entry4 : No ,,,,;
entry5 : No ,,,,;
entry6 : No ,,,,;
entry7 : No ,,,,;
entry8 : No ,,,,;
Load1 : yes,LD,,,,,#1,0 + Reg[R2];
Load2 : yes,LD,,,,,#2,0;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : No,,,,,,,;
Mult2 : No,,,,,,,;
Reorder:f0:;f1:;f2: 1;f3:;f4: 2;f5:;f6:;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2: Yes;f3:No;f4: Yes;f5:No;f6:No;f7:No;f8:No;f9:No;f10:No;
cycle_3
entry1 : yes,LD F2 0(R2),Execute,F2,;
entry2 : yes,LD F4 0(R3),Issue,F4,;
entry3 : yes,DIVD F0,F4,F2,Issue,F0,;
entry4 : No ,,,,;
entry5 : No ,,,,;
entry6 : No ,,,,;
entry7 : No ,,,,;
entry8 : No ,,,,;
Load1 : yes,LD,,,,,#1,0 + Reg[R2];
Load2 : yes,LD,,,,,#2,0;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,DIVD,,,#2,#1,#3,;
Mult2 : No,,,,,,,;
Reorder:f0: 3;f1:;f2: 1;f3:;f4: 2;f5:;f6:;f7:;f8:;f9:;f10:;
Busy:f0: Yes;f1:No;f2: Yes;f3:No;f4: Yes;f5:No;f6:No;f7:No;f8:No;f9:No;f10:No;
cycle_4
entry1 : yes,LD F2 0(R2),Write result,F2,Mem[0 + Reg[R2]];
entry2 : yes,LD F4 0(R3),Execute,F4,;
entry3 : yes,DIVD F0,F4,F2,Issue,F0,;
entry4 : yes,MULTD F6,F0,F2,Issue,F6,;
entry5 : No ,,,,;
entry6 : No ,,,,;
entry7 : No ,,,,;
entry8 : No ,,,,;
Load1 : No,,,,,,,;
Load2 : yes,LD,,,,,#2,0 + Reg[R3];
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,DIVD,,Mem[0 + Reg[R2]],#2,,#3,;
Mult2 : yes,MULTD,,Mem[0 + Reg[R2]],#3,,#4,;
Reorder:f0: 3;f1:;f2: 1;f3:;f4: 2;f5:;f6: 4;f7:;f8:;f9:;f10:;
Busy:f0: Yes;f1:No;f2: Yes;f3:No;f4: Yes;f5:No;f6: Yes;f7:No;f8:No;f9:No;f10:No;
cycle_5
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : yes,LD F4 0(R3),Execute,F4,;
entry3 : yes,DIVD F0,F4,F2,Issue,F0,;
entry4 : yes,MULTD F6,F0,F2,Issue,F6,;
entry5 : yes,ADDD F0,F4,F2,Issue,F0,;
entry6 : No ,,,,;
entry7 : No ,,,,;
entry8 : No ,,,,;
Load1 : No,,,,,,,;
Load2 : yes,LD,,,,,#2,0 + Reg[R3];
Add1 : yes,ADDD,,Mem[0 + Reg[R2]],#2,,#5,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,DIVD,,Mem[0 + Reg[R2]],#2,,#3,;
Mult2 : yes,MULTD,,Mem[0 + Reg[R2]],#3,,#4,;
Reorder:f0: 5;f1:;f2:;f3:;f4: 2;f5:;f6: 4;f7:;f8:;f9:;f10:;
Busy:f0: Yes;f1:No;f2:No;f3:No;f4: Yes;f5:No;f6: Yes;f7:No;f8:No;f9:No;f10:No;
cycle_6
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : yes,LD F4 0(R3),Write result,F4,Mem[0 + Reg[R3]];
entry3 : yes,DIVD F0,F4,F2,Issue,F0,;
entry4 : yes,MULTD F6,F0,F2,Issue,F6,;
entry5 : yes,ADDD F0,F4,F2,Issue,F0,;
entry6 : yes,SD F6 0(R3),Issue,F6,;
entry7 : No ,,,,;
entry8 : No ,,,,;
Load1 : yes,SD,,,#4,,#6,0;
Load2 : No,,,,,,,;
Add1 : yes,ADDD,Mem[0 + Reg[R3]],Mem[0 + Reg[R2]],,,#5,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,DIVD,Mem[0 + Reg[R3]],Mem[0 + Reg[R2]],,,#3,;
Mult2 : yes,MULTD,,Mem[0 + Reg[R2]],#3,,#4,;
Reorder:f0: 5;f1:;f2:;f3:;f4: 2;f5:;f6: 6;f7:;f8:;f9:;f10:;
Busy:f0: Yes;f1:No;f2:No;f3:No;f4: Yes;f5:No;f6: Yes;f7:No;f8:No;f9:No;f10:No;
cycle_7-8
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : yes,DIVD F0,F4,F2,Execute,F0,;
entry4 : yes,MULTD F6,F0,F2,Issue,F6,;
entry5 : yes,ADDD F0,F4,F2,Execute,F0,;
entry6 : yes,SD F6 0(R3),Issue,F6,;
entry7 : No ,,,,;
entry8 : No ,,,,;
Load1 : yes,SD,,,#4,,#6,0;
Load2 : No,,,,,,,;
Add1 : yes,ADDD,Mem[0 + Reg[R3]],Mem[0 + Reg[R2]],,,#5,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,DIVD,Mem[0 + Reg[R3]],Mem[0 + Reg[R2]],,,#3,;
Mult2 : yes,MULTD,,Mem[0 + Reg[R2]],#3,,#4,;
Reorder:f0: 5;f1:;f2:;f3:;f4:;f5:;f6: 6;f7:;f8:;f9:;f10:;
Busy:f0: Yes;f1:No;f2:No;f3:No;f4:No;f5:No;f6: Yes;f7:No;f8:No;f9:No;f10:No;
cycle_9-26
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : yes,DIVD F0,F4,F2,Execute,F0,;
entry4 : yes,MULTD F6,F0,F2,Issue,F6,;
entry5 : yes,ADDD F0,F4,F2,Write result,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : yes,SD F6 0(R3),Issue,F6,;
entry7 : No ,,,,;
entry8 : No ,,,,;
Load1 : yes,SD,,,#4,,#6,0;
Load2 : No,,,,,,,;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,DIVD,Mem[0 + Reg[R3]],Mem[0 + Reg[R2]],,,#3,;
Mult2 : yes,MULTD,,Mem[0 + Reg[R2]],#3,,#4,;
Reorder:f0: 5;f1:;f2:;f3:;f4:;f5:;f6: 6;f7:;f8:;f9:;f10:;
Busy:f0: Yes;f1:No;f2:No;f3:No;f4:No;f5:No;f6: Yes;f7:No;f8:No;f9:No;f10:No;
cycle_27
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : yes,DIVD F0,F4,F2,Write result,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : yes,MULTD F6,F0,F2,Issue,F6,;
entry5 : yes,ADDD F0,F4,F2,Write result,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : yes,SD F6 0(R3),Issue,F6,;
entry7 : No ,,,,;
entry8 : No ,,,,;
Load1 : yes,SD,,,#4,,#6,0;
Load2 : No,,,,,,,;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : No,,,,,,,;
Mult2 : yes,MULTD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]],Mem[0 + Reg[R2]],,,#4,;
Reorder:f0: 5;f1:;f2:;f3:;f4:;f5:;f6: 6;f7:;f8:;f9:;f10:;
Busy:f0: Yes;f1:No;f2:No;f3:No;f4:No;f5:No;f6: Yes;f7:No;f8:No;f9:No;f10:No;
cycle_28
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : No ,DIVD F0,F4,F2,Commit,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : yes,MULTD F6,F0,F2,Execute,F6,;
entry5 : yes,ADDD F0,F4,F2,Write result,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : yes,SD F6 0(R3),Issue,F6,;
entry7 : yes,MULTD F6,F0,F2,Issue,F6,;
entry8 : No ,,,,;
Load1 : yes,SD,,,#4,,#6,0;
Load2 : No,,,,,,,;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,MULTD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]],Regs[F2],,,#7,;
Mult2 : yes,MULTD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]],Mem[0 + Reg[R2]],,,#4,;
Reorder:f0:;f1:;f2:;f3:;f4:;f5:;f6: 7;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2:No;f3:No;f4:No;f5:No;f6: Yes;f7:No;f8:No;f9:No;f10:No;
cycle_29-37
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : No ,DIVD F0,F4,F2,Commit,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : yes,MULTD F6,F0,F2,Execute,F6,;
entry5 : yes,ADDD F0,F4,F2,Write result,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : yes,SD F6 0(R3),Issue,F6,;
entry7 : yes,MULTD F6,F0,F2,Issue,F6,;
entry8 : yes,SD F6 0(R1),Issue,F6,;
Load1 : yes,SD,,,#4,,#6,0;
Load2 : yes,SD,,,#7,,#8,0;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,MULTD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]],Regs[F2],,,#7,;
Mult2 : yes,MULTD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]],Mem[0 + Reg[R2]],,,#4,;
Reorder:f0:;f1:;f2:;f3:;f4:;f5:;f6: 8;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2:No;f3:No;f4:No;f5:No;f6: Yes;f7:No;f8:No;f9:No;f10:No;
cycle_38
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : No ,DIVD F0,F4,F2,Commit,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : yes,MULTD F6,F0,F2,Write result,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]];
entry5 : yes,ADDD F0,F4,F2,Write result,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : yes,SD F6 0(R3),Issue,F6,;
entry7 : yes,MULTD F6,F0,F2,Execute,F6,;
entry8 : yes,SD F6 0(R1),Issue,F6,;
Load1 : yes,SD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]],,,,#6,0;
Load2 : yes,SD,,,#7,,#8,0;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,MULTD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]],Regs[F2],,,#7,;
Mult2 : No,,,,,,,;
Reorder:f0:;f1:;f2:;f3:;f4:;f5:;f6: 8;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2:No;f3:No;f4:No;f5:No;f6: Yes;f7:No;f8:No;f9:No;f10:No;
cycle_39
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : No ,DIVD F0,F4,F2,Commit,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : No ,MULTD F6,F0,F2,Commit,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]];
entry5 : yes,ADDD F0,F4,F2,Write result,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : yes,SD F6 0(R3),Execute,F6,;
entry7 : yes,MULTD F6,F0,F2,Execute,F6,;
entry8 : yes,SD F6 0(R1),Issue,F6,;
Load1 : yes,SD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]],,,,#6,0 + Reg[R3];
Load2 : yes,SD,,,#7,,#8,0;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,MULTD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]],Regs[F2],,,#7,;
Mult2 : No,,,,,,,;
Reorder:f0:;f1:;f2:;f3:;f4:;f5:;f6:;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2:No;f3:No;f4:No;f5:No;f6:No;f7:No;f8:No;f9:No;f10:No;
cycle_40
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : No ,DIVD F0,F4,F2,Commit,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : No ,MULTD F6,F0,F2,Commit,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]];
entry5 : No ,ADDD F0,F4,F2,Commit,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : yes,SD F6 0(R3),Execute,F6,;
entry7 : yes,MULTD F6,F0,F2,Execute,F6,;
entry8 : yes,SD F6 0(R1),Issue,F6,;
Load1 : yes,SD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]],,,,#6,0 + Reg[R3];
Load2 : yes,SD,,,#7,,#8,0;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,MULTD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]],Regs[F2],,,#7,;
Mult2 : No,,,,,,,;
Reorder:f0:;f1:;f2:;f3:;f4:;f5:;f6:;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2:No;f3:No;f4:No;f5:No;f6:No;f7:No;f8:No;f9:No;f10:No;
cycle_41
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : No ,DIVD F0,F4,F2,Commit,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : No ,MULTD F6,F0,F2,Commit,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]];
entry5 : No ,ADDD F0,F4,F2,Commit,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : yes,SD F6 0(R3),Write result,F6,;
entry7 : yes,MULTD F6,F0,F2,Execute,F6,;
entry8 : yes,SD F6 0(R1),Issue,F6,;
Load1 : No,,,,,,,;
Load2 : yes,SD,,,#7,,#8,0;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,MULTD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]],Regs[F2],,,#7,;
Mult2 : No,,,,,,,;
Reorder:f0:;f1:;f2:;f3:;f4:;f5:;f6:;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2:No;f3:No;f4:No;f5:No;f6:No;f7:No;f8:No;f9:No;f10:No;
cycle_42-47
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : No ,DIVD F0,F4,F2,Commit,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : No ,MULTD F6,F0,F2,Commit,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]];
entry5 : No ,ADDD F0,F4,F2,Commit,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : No ,SD F6 0(R3),Commit,F6,;
entry7 : yes,MULTD F6,F0,F2,Execute,F6,;
entry8 : yes,SD F6 0(R1),Issue,F6,;
Load1 : No,,,,,,,;
Load2 : yes,SD,,,#7,,#8,0;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : yes,MULTD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]],Regs[F2],,,#7,;
Mult2 : No,,,,,,,;
Reorder:f0:;f1:;f2:;f3:;f4:;f5:;f6:;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2:No;f3:No;f4:No;f5:No;f6:No;f7:No;f8:No;f9:No;f10:No;
cycle_48
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : No ,DIVD F0,F4,F2,Commit,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : No ,MULTD F6,F0,F2,Commit,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]];
entry5 : No ,ADDD F0,F4,F2,Commit,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : No ,SD F6 0(R3),Commit,F6,;
entry7 : yes,MULTD F6,F0,F2,Write result,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Regs[F2];
entry8 : yes,SD F6 0(R1),Issue,F6,;
Load1 : No,,,,,,,;
Load2 : yes,SD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Regs[F2],,,,#8,0;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : No,,,,,,,;
Mult2 : No,,,,,,,;
Reorder:f0:;f1:;f2:;f3:;f4:;f5:;f6:;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2:No;f3:No;f4:No;f5:No;f6:No;f7:No;f8:No;f9:No;f10:No;
cycle_49-50
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : No ,DIVD F0,F4,F2,Commit,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : No ,MULTD F6,F0,F2,Commit,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]];
entry5 : No ,ADDD F0,F4,F2,Commit,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : No ,SD F6 0(R3),Commit,F6,;
entry7 : No ,MULTD F6,F0,F2,Commit,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Regs[F2];
entry8 : yes,SD F6 0(R1),Execute,F6,;
Load1 : No,,,,,,,;
Load2 : yes,SD,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Regs[F2],,,,#8,0 + Reg[R1];
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : No,,,,,,,;
Mult2 : No,,,,,,,;
Reorder:f0:;f1:;f2:;f3:;f4:;f5:;f6:;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2:No;f3:No;f4:No;f5:No;f6:No;f7:No;f8:No;f9:No;f10:No;
cycle_51
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : No ,DIVD F0,F4,F2,Commit,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : No ,MULTD F6,F0,F2,Commit,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]];
entry5 : No ,ADDD F0,F4,F2,Commit,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : No ,SD F6 0(R3),Commit,F6,;
entry7 : No ,MULTD F6,F0,F2,Commit,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Regs[F2];
entry8 : yes,SD F6 0(R1),Write result,F6,;
Load1 : No,,,,,,,;
Load2 : No,,,,,,,;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : No,,,,,,,;
Mult2 : No,,,,,,,;
Reorder:f0:;f1:;f2:;f3:;f4:;f5:;f6:;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2:No;f3:No;f4:No;f5:No;f6:No;f7:No;f8:No;f9:No;f10:No;
cycle_52
entry1 : No ,LD F2 0(R2),Commit,F2,Mem[0 + Reg[R2]];
entry2 : No ,LD F4 0(R3),Commit,F4,Mem[0 + Reg[R3]];
entry3 : No ,DIVD F0,F4,F2,Commit,F0,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]];
entry4 : No ,MULTD F6,F0,F2,Commit,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Mem[0 + Reg[R2]];
entry5 : No ,ADDD F0,F4,F2,Commit,F0,(Mem[0 + Reg[R3]] + Mem[0 + Reg[R2]]);
entry6 : No ,SD F6 0(R3),Commit,F6,;
entry7 : No ,MULTD F6,F0,F2,Commit,F6,Mem[0 + Reg[R3]] / Mem[0 + Reg[R2]] * Regs[F2];
entry8 : No ,SD F6 0(R1),Commit,F6,;
Load1 : No,,,,,,,;
Load2 : No,,,,,,,;
Add1 : No,,,,,,,;
Add2 : No,,,,,,,;
Add3 : No,,,,,,,;
Mult1 : No,,,,,,,;
Mult2 : No,,,,,,,;
Reorder:f0:;f1:;f2:;f3:;f4:;f5:;f6:;f7:;f8:;f9:;f10:;
Busy:f0:No;f1:No;f2:No;f3:No;f4:No;f5:No;f6:No;f7:No;f8:No;f9:No;f10:No;


(Instruction):(Issue cycle),(Exec comp cycle),(Write result cycle), (Commit cycle)
LD F2 0 R2 : 1 3 4 5
LD F4 0 R3 : 2 5 6 7
DIVD F0 F4 F2 : 3 26 27 28
MULTD F6 F0 F2 : 4 37 38 39
ADDD F0 F4 F2 : 5 8 9 40
SD F6 0 R3 : 6 40 41 42
MULTD F6 F0 F2 : 28 47 48 49
SD F6 0 R1 : 29 50 51 52
